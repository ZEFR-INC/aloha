<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <parent>
        <groupId>com.eharmony.matching</groupId>
        <artifactId>aloha</artifactId>
        <version>1.0.0-SNAPSHOT</version>
    </parent>

    <modelVersion>4.0.0</modelVersion>
    <artifactId>aloha-core${artifact.ext}</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <name>${project.artifactId}</name>

    <licenses>
        <license>
            <name>MIT License</name>
            <url>http://opensource.org/licenses/MIT</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <scm>
        <connection>scm:git:git@github.corp.eharmony.com:matching/aloha-core.git</connection>
        <url>git@github.corp.eharmony.com:matching/aloha-core.git</url>
        <developerConnection>scm:git:git@github.corp.eharmony.com:matching/aloha-core.git</developerConnection>
    </scm>

    <distributionManagement>
        <repository>
            <uniqueVersion>false</uniqueVersion>
            <id>internal-releases</id>
            <name>Internal Releases</name>
            <url>https://repository.corp.eharmony.com/nexus/content/repositories/internal-releases</url>
            <layout>default</layout>
        </repository>
        <snapshotRepository>
            <uniqueVersion>false</uniqueVersion>
            <id>internal-snapshots</id>
            <name>Internal Snapshots</name>
            <url>https://repository.corp.eharmony.com/nexus/content/repositories/internal-snapshots</url>
            <layout>default</layout>
        </snapshotRepository>
    </distributionManagement>

    <developers>
        <developer>
            <id>ryan</id>
            <name>Ryan Deak</name>
            <email>rdeak@eharmony.com</email>
            <organization>eHarmony</organization>
            <organizationUrl>http://www.eharmony.com</organizationUrl>
            <roles>
                <role>creator</role>
                <role>developer</role>
            </roles>
            <timezone>-8</timezone>
        </developer>
    </developers>

    <properties>
        <spray.json.version>1.2.3</spray.json.version>
    </properties>

    <dependencies>

        <!-- Dependencies in under aloha's dependency management. -->
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-reflect</artifactId>
        </dependency>
        <dependency>
            <groupId>org.scalaz</groupId>
            <artifactId>scalaz-core_${scala.major.version}</artifactId>
        </dependency>

        <dependency>
            <groupId>commons-vfs</groupId>
            <artifactId>commons-vfs</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-vfs2</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
        </dependency>
        <dependency>
            <groupId>com.google.protobuf</groupId>
            <artifactId>protobuf-java</artifactId>
        </dependency>

        <dependency>
            <groupId>org.clapper</groupId>
            <artifactId>grizzled-slf4j_${scala.major.version}</artifactId>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- Dependencies in under aloha's dependency management. -->

        <!-- Java type information using super type tokens -->
        <!-- See https://github.com/cowtowncoder/java-classmate -->
        <dependency>
            <groupId>com.fasterxml</groupId>
            <artifactId>classmate</artifactId>
            <version>0.5.4</version>
        </dependency>


        <!-- Jackson used for protocol buffer serialization to JSON via protostuff interface. -->
        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-mapper-asl</artifactId>
        </dependency>
        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-jaxrs</artifactId>
        </dependency>
        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-xc</artifactId>
        </dependency>
        <dependency>
            <groupId>com.dyuproject.protostuff</groupId>
            <artifactId>protostuff-api</artifactId>
        </dependency>
        <dependency>
            <groupId>com.dyuproject.protostuff</groupId>
            <artifactId>protostuff-json</artifactId>
        </dependency>
        <dependency>
            <groupId>com.dyuproject.protostuff</groupId>
            <artifactId>protostuff-core</artifactId>
        </dependency>
        <!-- Jackson used for protocol buffer serialization to JSON via protostuff interface. -->

        <!-- Spray JSON deps. -->
        <dependency>
            <groupId>io.spray</groupId>
            <artifactId>spray-json_${scala.major.version}</artifactId>
            <version>${spray.json.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.scala-lang</groupId>
                    <artifactId>scala-library</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>com.dyuproject.protostuff</groupId>
                <artifactId>protostuff-maven-plugin</artifactId>
                <version>${protostuff.version}</version>
                <configuration>
                    <protoModules>
                        <protoModule>
                            <source>src/main/proto/Score.proto</source>
                            <outputDir>target/generated-sources</outputDir>
                            <output>java_v2protoc_schema</output>
                            <encoding>UTF-8</encoding>
                            <options>
                                <property>
                                    <name>generate_field_map</name>
                                    <value>true</value>
                                </property>
                                <property>
                                    <name>compile_imports</name>
                                    <value>recursive</value>
                                </property>
                            </options>
                        </protoModule>
                    </protoModules>
                </configuration>
                <executions>
                    <execution>
                        <id>generate-sources</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>compile-protoc</id>
                        <phase>generate-sources</phase>
                        <configuration>
                            <tasks>
                                <mkdir dir="${basedir}/target/generated-sources" />
                                <path id="proto.path">
                                    <fileset dir="src/main/proto">
                                        <include name="**/*.proto" />
                                    </fileset>
                                </path>
                                <pathconvert pathsep=" " property="proto.files" refid="proto.path" />
                                <!--
                                    This required protoc to be installed.

                                    INSTRUCTIONS:
                                        (X.Y.Z in {2.5.0, 2.4.1, 2.3.0})
                                        wget http://protobuf.googlecode.com/files/protobuf-X.Y.Z.tar.gz
                                        tar -xzf protobuf-X.Y.Z.tar.gz
                                        cd protobuf-X.Y.Z
                                        sudo ./configure
                                        sudo make
                                        sudo make install

                                    Alternatively, on OS X:
                                        sudo port install protobuf-cpp @X.Y.Z
                                -->
                                <exec executable="protoc" failonerror="true">
                                    <arg value="--java_out=${basedir}/target/generated-sources" />
                                    <arg value="-I${project.basedir}/src/main/proto" />
                                    <arg line="${proto.files}" />
                                </exec>
                            </tasks>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>1.7</version>
                <executions>
                    <execution>
                        <id>add-source</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>${basedir}/target/generated-sources</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
